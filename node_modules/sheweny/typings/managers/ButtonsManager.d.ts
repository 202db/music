import { BaseManager } from './index.js';
import { Button } from '../structures/index.js';
import { Collection } from 'discord.js';
import type { ShewenyClient } from '../client/Client.js';
import type { ButtonsManagerDefaultOptions, ButtonsManagerOptions, CustomId } from '../typescript/index.js';
/**
 * Manager for Buttons
 */
export declare class ButtonsManager extends BaseManager {
    /**
     * Collection of the buttons
     * @type {Collection<CustomId, Button[]> | undefined}
     */
    buttons?: Collection<CustomId, Button[]>;
    /**
     * Default data for the buttons
     * @type {ButtonsManagerDefaultOptions}
     */
    default?: ButtonsManagerDefaultOptions;
    /**
     * Constructor of buttons manager
     * @param {ShewenyClient} client Client framework
     * @param {ButtonsManagerOptions} options The options of the manager
     */
    constructor(client: ShewenyClient, options: ButtonsManagerOptions);
    /**
     * Load all buttons in collection
     * @returns {Promise<Collection<CustomId, Button[]> | undefined> }
     */
    loadAll(): Promise<Collection<CustomId, Button[]> | undefined>;
    /**
     * Unload all buttons
     * @returns {void}
     */
    unloadAll(): void;
}
