import type { ShewenyClient } from '../';
import type { Manager } from '../typescript/index.js';
/**
 * The base class for all structures
 */
export declare abstract class BaseStructure {
    /**
     * The structure is loadable by the Loader
     * @internal
     * @type {string}
     */
    static readonly _id: string;
    /**
     * Client framework
     * @type {ShewenyClient}
     */
    readonly client: ShewenyClient;
    /**
     * If the structure is enabled or not
     * @type {boolean}
     */
    enabled: boolean;
    /**
     * Path to file
     * @type {string | undefined}
     */
    path?: string;
    /**
     * Manager of the structure
     * @type {Manager | undefined}
     */
    manager?: Manager;
    /**
     * Constructor for build base of any structures
     * @param {ShewenyClient} [client] Client framework
     * @param {boolean} [enabled] If the structure is enabled or not
     */
    constructor(client: ShewenyClient, enabled?: boolean);
    /**
     * Enable this structure
     */
    enable(): void;
    /**
     * Disable this structure
     */
    disable(): void;
}
