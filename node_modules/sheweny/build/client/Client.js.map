{"version":3,"file":"Client.js","sourceRoot":"","sources":["../../src/client/Client.ts"],"names":[],"mappings":"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","sourcesContent":["import { resolve } from 'path';\nimport { readdir } from 'fs/promises';\nimport { Client, Collection } from 'discord.js';\nimport { ClientUtil } from './ClientUtil.js';\nimport {\n  ButtonsManager,\n  CommandsManager,\n  EventsManager,\n  InhibitorsManager,\n  ModalsManager,\n  SelectMenusManager,\n} from '../managers/index.js';\nimport { ShewenyWarning } from '../helpers/index.js';\nimport { CLIENT_MODE } from '../constants/constants.js';\nimport type { Snowflake, ClientOptions } from 'discord.js';\nimport type { ShewenyClientOptions, Managers, ManagersCollections, Cooldowns } from '../typescript/index.js';\n\n/**\n * Sheweny framework client\n */\nexport class ShewenyClient extends Client {\n  /**\n   * The ID of the bot admins\n   * @type {Snowflake[]}\n   */\n  public admins: Snowflake[];\n\n  /**\n   * The collections of handlers\n   * @type {ManagersCollections}\n   */\n  public readonly collections: ManagersCollections;\n\n  /**\n   * The cooldowns of the client\n   * @type {Cooldowns}\n   */\n  public readonly cooldowns: Cooldowns;\n\n  /**\n   * If the client is ready\n   * @type {boolean}\n   */\n  public connected: boolean;\n\n  /**\n   * If the cooldown should be desactivated for admins\n   * @type {boolean}\n   */\n  public disableCooldownsForAdmins: boolean;\n\n  /**\n   * If the client joins threads when created\n   * @type {boolean}\n   */\n  public joinThreadsOnCreate: boolean;\n  /**\n   * The mode of the application (developement or production)\n   * @type {string}\n   */\n  public mode?: typeof CLIENT_MODE.prod | typeof CLIENT_MODE.dev;\n\n  /**\n   * The manager of client\n   * @type {Managers}\n   */\n  public readonly managers: Managers;\n\n  /**\n   * A util tool to resolve and get informations\n   * @type {ClientUtil}\n   */\n  public readonly util: ClientUtil;\n\n  /**\n   * Set options and your client is ready\n   * @param {ShewenyClientOptions} [options] Client framework options\n   * @param {ClientOptions} [clientOptions] Client discord.js options\n   */\n  constructor(options: ShewenyClientOptions, clientOptions?: ClientOptions) {\n    super(clientOptions || options);\n    this.admins = options.admins || [];\n    this.collections = {\n      commands: new Collection(),\n      events: new Collection(),\n      buttons: new Collection(),\n      inhibitors: new Collection(),\n      modals: new Collection(),\n      selectMenus: new Collection(),\n    };\n    this.cooldowns = {\n      commands: new Collection(),\n      buttons: new Collection(),\n      selectMenus: new Collection(),\n      modals: new Collection(),\n    };\n    this.connected = false;\n    this.disableCooldownsForAdmins = options.disableCooldownsForAdmins || false;\n    this.joinThreadsOnCreate = options.joinThreadsOnCreate || false;\n\n    /** **** MANAGERS ******/\n    this.managers = {};\n\n    // BUTTONS\n    if (options.managers?.buttons) {\n      this.managers.buttons = new ButtonsManager(this, {\n        ...options.managers.buttons,\n      });\n      this.managers.buttons.loadAll().then(buttons => {\n        if (buttons) this.collections.buttons = buttons;\n      });\n    }\n    // COMMANDS\n    if (options.managers?.commands) {\n      this.managers.commands = new CommandsManager(this, {\n        ...options.managers.commands,\n        autoRegisterApplicationCommands: options.managers.commands.autoRegisterApplicationCommands ?? true,\n      });\n\n      this.managers.commands.loadAll().then(commands => {\n        if (commands) this.collections.commands = commands;\n      });\n    }\n    // EVENTS\n    if (options.managers?.events) {\n      this.managers.events = new EventsManager(this, {\n        ...options.managers.events,\n      });\n      this.managers.events.loadAll().then(events => {\n        if (events) this.collections.events = events;\n      });\n    }\n    // INHIBITORS\n    if (options.managers?.inhibitors) {\n      this.managers.inhibitors = new InhibitorsManager(this, {\n        ...options.managers.inhibitors,\n      });\n      this.managers.inhibitors.loadAll().then(inhibitors => {\n        if (inhibitors) this.collections.inhibitors = inhibitors;\n      });\n    }\n    // MODALS\n    if (options.managers?.modals) {\n      this.managers.modals = new ModalsManager(this, {\n        ...options.managers.modals,\n      });\n      this.managers.modals.loadAll().then(modals => {\n        if (modals) this.collections.modals = modals;\n      });\n    }\n    // SELECT MENUS\n    if (options.managers?.selectMenus) {\n      this.managers.selectMenus = new SelectMenusManager(this, {\n        ...options.managers.selectMenus,\n      });\n      this.managers.selectMenus.loadAll().then(selectmenus => {\n        if (selectmenus) this.collections.selectMenus = selectmenus;\n      });\n    }\n\n    this.mode = options.mode || CLIENT_MODE.dev;\n    this.util = new ClientUtil(this);\n    if (options.mode === CLIENT_MODE.dev) new ShewenyWarning(this, 'START');\n\n    // Load framework events\n    (async () => {\n      // if(require)\n      const dir = resolve(__dirname, '../events');\n      const files = await readdir(dir);\n      for (const file of files) {\n        if (!file?.endsWith('.js')) continue;\n        const evtName = file.split('.')[0];\n        const event = await import(`${dir}/${file}`).then(e => e.default);\n        if (evtName) this.on(evtName, (...args) => event(this, ...args));\n      }\n    })();\n  }\n\n  /**\n   * Return true when the client is ready\n   * @returns {Promise<boolean>}\n   */\n  public awaitReady(): Promise<boolean> {\n    return new Promise(resolve => {\n      if (this.connected) return resolve(true);\n      this.once('ready', () => {\n        return resolve(true);\n      });\n    });\n  }\n}\n"]}