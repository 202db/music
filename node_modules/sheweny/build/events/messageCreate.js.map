{"version":3,"file":"messageCreate.js","sourceRoot":"","sources":["../../src/events/messageCreate.ts"],"names":[],"mappings":"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","sourcesContent":["import { ShewenyError } from '../helpers/index.js';\nimport { Collection } from 'discord.js';\nimport {\n  COMMAND_TYPE,\n  INHIBITOR_TYPE,\n  COMMAND_CHANNEL,\n  COMMAND_MESSAGE_ARGS_TYPE,\n  COMMAND_PERMISSIONS,\n  COMMAND_EVENTS,\n} from '../constants/constants.js';\nimport type { ShewenyClient } from '../client/Client.js';\nimport type { Inhibitor } from '../structures/index.js';\nimport type { Message } from 'discord.js';\n\nexport default async function run(client: ShewenyClient, message: Message) {\n  try {\n    // message.content can be empty with the new message_content intent\n    if (!message.content || message.author.bot) return;\n    let prefix = '';\n    if (typeof client.managers.commands?.prefix === 'string') prefix = client.managers.commands.prefix;\n    if (typeof client.managers.commands?.prefix === 'function') prefix = await client.managers.commands.prefix(message);\n    const args = message.content.trim().slice(prefix.length).split(/ +/g);\n    if (!args[0]) return;\n    if (!message.content?.startsWith(prefix)) return;\n    /* -----------------COMMAND----------------- */\n    const commandName = args.shift()?.toLowerCase();\n    if (!commandName) return;\n    const commands =\n      client.collections.commands?.get(commandName) ||\n      client.collections.commands?.find(cmds => {\n        for (const cmd of cmds) {\n          if (cmd.aliases && cmd.aliases.length && cmd.aliases.includes(commandName)) return true;\n          else return false;\n        }\n        return false;\n      });\n    if (!commands || (commands && !commands.length)) return;\n    for (const command of commands) {\n      await (async () => {\n        if (!command || (command && command.type !== COMMAND_TYPE.cmdMsg)) return;\n        if (!command.enabled) return;\n        if (command.before) await command.before(message);\n        /**\n         * Handle inhibitors\n         */\n        const inhibitorsCollection = client.collections.inhibitors?.filter((is: Inhibitor[]) => {\n          for (const i of is) {\n            return i.type.includes(INHIBITOR_TYPE.message) || i.type.includes(INHIBITOR_TYPE.all);\n          }\n          return false;\n        });\n        const inhibitorsArray: Inhibitor[] = [];\n        for (const [, inhibitors] of inhibitorsCollection) {\n          if (inhibitors && inhibitors.length) {\n            for (const inhibitor of inhibitors) {\n              inhibitorsArray.push(inhibitor);\n            }\n          }\n        }\n        if (inhibitorsArray && inhibitorsArray.length) {\n          const sorted = inhibitorsArray.sort((a, b) => b.priority - a.priority);\n          for (const i of sorted) {\n            if (!(await i.execute(command, message))) return await i.onFailure(command, message);\n          }\n        }\n\n        /* ---------------PERMISSIONS--------------- */\n        const userMissingPerms: string[] = [];\n        const clientMissingPerms: string[] = [];\n        if (command.adminsOnly && !client.admins?.includes(message.author.id)) {\n          userMissingPerms.push(COMMAND_PERMISSIONS.admin);\n        }\n\n        /* ---------------IN-GUILD--------------- */\n        if (message.guild) {\n          if (command.channel === COMMAND_CHANNEL.dm) {\n            return client.managers.commands?.emit(COMMAND_EVENTS.invalidChannel, command, message);\n          }\n\n          let member = message.guild.members.cache.get(message.author.id);\n          if (!member) member = await message.guild.members.fetch(message.author.id);\n          if (command.userPermissions.length > 0) {\n            for (const permission of command.userPermissions) {\n              if (!member.permissions.has(permission)) {\n                userMissingPerms.push(permission.toString());\n              }\n            }\n          }\n          if (userMissingPerms.length) {\n            return client.managers.commands?.emit(COMMAND_EVENTS.userMissingPerm, message, userMissingPerms, command);\n          }\n          if (command.clientPermissions.length > 0) {\n            for (const permission of command.clientPermissions) {\n              if (!message.guild.members.me?.permissions.has(permission)) {\n                clientMissingPerms.push(permission.toString());\n              }\n            }\n          }\n          if (clientMissingPerms.length) {\n            return client.managers.commands?.emit(COMMAND_EVENTS.clientMissingPerm, message, clientMissingPerms, command);\n          }\n        } else if (command.channel === COMMAND_CHANNEL.guild) {\n          return client.managers.commands?.emit(COMMAND_EVENTS.invalidChannel, command, message);\n        }\n\n        /* ---------------COOLDOWNS--------------- */\n        if (\n          !client.disableCooldownsForAdmins ||\n          (client.disableCooldownsForAdmins && !client.admins?.includes(message.author.id))\n        ) {\n          if (!client.cooldowns.commands.has(command.name)) {\n            client.cooldowns.commands.set(command.name, new Collection());\n          }\n          const timeNow = Date.now();\n          const tStamps = client.cooldowns.commands.get(command.name);\n          if (tStamps) {\n            const cdAmount = (command.cooldown || 0) * 1000;\n            if (tStamps.has(message.author.id)) {\n              const cdExpirationTime = (tStamps.get(message.author.id) || 0) + cdAmount;\n              if (timeNow < cdExpirationTime) {\n                // const timeLeft = (cdExpirationTime - timeNow) / 1000;\n                return client.managers.commands?.emit(COMMAND_EVENTS.cooldownLimit, message, cdExpirationTime - timeNow);\n              }\n            }\n\n            tStamps.set(message.author.id, timeNow);\n            setTimeout(() => tStamps.delete(message.author.id), cdAmount);\n          }\n        }\n        // eslint-disable-next-line\n        const messageArgs: any = {};\r\n        /* ---------------ARGUMENTS--------------- */\n        const types = [\n          COMMAND_MESSAGE_ARGS_TYPE.string,\n          COMMAND_MESSAGE_ARGS_TYPE.number,\n          COMMAND_MESSAGE_ARGS_TYPE.boolean,\n          COMMAND_MESSAGE_ARGS_TYPE.rest,\n          COMMAND_MESSAGE_ARGS_TYPE.guild,\n          COMMAND_MESSAGE_ARGS_TYPE.channel,\n          COMMAND_MESSAGE_ARGS_TYPE.member,\n          COMMAND_MESSAGE_ARGS_TYPE.guild_emoji,\n          COMMAND_MESSAGE_ARGS_TYPE.role,\n          COMMAND_MESSAGE_ARGS_TYPE.user,\n          COMMAND_MESSAGE_ARGS_TYPE.command,\n        ];\n\n        if (command.args && command.args.length > 0) {\n          for (let i = 0; i < command.args.length; i++) {\n            const argCommand = command.args[i];\n            if (!argCommand) continue;\n            if (!types.includes(argCommand.type)) continue;\n            if (!args[i]) {\n              // No argument provided\n              messageArgs[argCommand?.name] = argCommand?.default || null;\n              continue;\n            }\n            switch (argCommand.type) {\n              case COMMAND_MESSAGE_ARGS_TYPE.string:\n                messageArgs[argCommand?.name] = String(args[i]);\n                break;\n              case COMMAND_MESSAGE_ARGS_TYPE.number:\n                messageArgs[argCommand?.name] = Number(args[i]);\n                break;\n              case COMMAND_MESSAGE_ARGS_TYPE.boolean:\n                messageArgs[argCommand?.name] = Boolean(args[i]);\n                break;\n              case COMMAND_MESSAGE_ARGS_TYPE.rest:\n                messageArgs[argCommand?.name] = String(args.slice(i).join(' '));\n                break;\n\n              case COMMAND_MESSAGE_ARGS_TYPE.guild:\n                messageArgs[argCommand?.name] = client.util.resolveGuild(args[i] || '');\n                break;\n              case COMMAND_MESSAGE_ARGS_TYPE.channel:\n                if (!message.guild) {\n                  messageArgs[argCommand?.name] = null;\n                  break;\n                }\n                messageArgs[argCommand?.name] = client.util.resolveChannel(message.guild, args[i] || '');\n                break;\n              case COMMAND_MESSAGE_ARGS_TYPE.member:\n                if (!message.guild) {\n                  messageArgs[argCommand?.name] = null;\n                  break;\n                }\n                messageArgs[argCommand?.name] = await client.util.resolveMember(message.guild, args[i] || '');\n                break;\n              case COMMAND_MESSAGE_ARGS_TYPE.guild_emoji:\n                if (!message.guild) {\n                  messageArgs[argCommand?.name] = null;\n                  break;\n                }\n                messageArgs[argCommand?.name] = client.util.resolveGuildEmoji(message.guild, args[i] || '');\n                break;\n              case COMMAND_MESSAGE_ARGS_TYPE.role:\n                if (!message.guild) {\n                  messageArgs[argCommand?.name] = null;\n                  break;\n                }\n                messageArgs[argCommand?.name] = client.util.resolveRole(message.guild, args[i] || '');\n                break;\n              case COMMAND_MESSAGE_ARGS_TYPE.user:\n                messageArgs[argCommand?.name] = await client.util.resolveUser(args[i] || '');\n                break;\n              case COMMAND_MESSAGE_ARGS_TYPE.command:\n                messageArgs[argCommand?.name] = await client.util.resolveCommand(args[i] || '');\n                break;\n            }\n          }\n\n          /* ---------------COMMAND--------------- */\n        }\n        await command.execute(message, messageArgs);\n      })();\n    }\n  } catch (err) {\n    const e = err as Error;\n    new ShewenyError(client, e);\n  }\n}\n"]}