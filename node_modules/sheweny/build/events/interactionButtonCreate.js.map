{"version":3,"file":"interactionButtonCreate.js","sourceRoot":"","sources":["../../src/events/interactionButtonCreate.ts"],"names":[],"mappings":"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","sourcesContent":["import { Collection } from 'discord.js';\nimport { ShewenyError } from '../helpers/index.js';\nimport { INHIBITOR_TYPE, BUTTON_EVENTS } from '../constants/constants.js';\nimport type { ButtonInteraction } from 'discord.js';\nimport type { ShewenyClient } from '../client/Client.js';\nimport type { Inhibitor, Button } from '../structures/index.js';\nexport default async function run(client: ShewenyClient, interaction: ButtonInteraction) {\n  try {\n    if (!client.collections.buttons) return;\n\n    const buttons: Button[] = [];\n    for (const [, structure] of client.collections.buttons) {\n      if (!structure || (structure && !structure.length)) return;\n      for (const button of structure) {\n        for (const customId of button.customId) {\n          if (!(customId instanceof RegExp) && customId === interaction.customId) {\n            buttons.push(button);\n          } else if (customId instanceof RegExp && customId.test(interaction.customId)) {\n            customId.lastIndex = 0;\n            buttons.push(button);\n          }\n        }\n      }\n    }\n    if (!buttons || (buttons && !buttons.length)) return;\n    for (const button of buttons) {\n      await (async () => {\n        if (!button.enabled) return;\n        if (button.before) await button.before(interaction);\n\n        /**\n         * Handle inhibitors\n         */\n        const inhibitorsCollection = client.collections.inhibitors?.filter((is: Inhibitor[]) => {\n          for (const i of is) {\n            return i.type.includes(INHIBITOR_TYPE.button) || i.type.includes(INHIBITOR_TYPE.all);\n          }\n          return false;\n        });\n        const inhibitorsArray: Inhibitor[] = [];\n        for (const [, inhibitors] of inhibitorsCollection) {\n          if (inhibitors && inhibitors.length) {\n            for (const inhibitor of inhibitors) {\n              inhibitorsArray.push(inhibitor);\n            }\n          }\n        }\n        if (inhibitorsArray && inhibitorsArray.length) {\n          const sorted = inhibitorsArray.sort((a, b) => b.priority - a.priority);\n          for (const i of sorted) {\n            if (!(await i.execute(button, interaction))) return await i.onFailure(button, interaction);\n          }\n        }\n\n        /* ---------------COOLDOWNS--------------- */\n        if (!client.admins?.includes(interaction.user.id)) {\n          if (!client.cooldowns.buttons.has(button.customId)) {\n            client.cooldowns.buttons.set(button.customId, new Collection<string, number>());\n          }\n\n          const timeNow = Date.now();\n          const tStamps = client.cooldowns.buttons.get(button.customId);\n          const cdAmount = (button.cooldown || 0) * 1000;\n\n          if (tStamps) {\n            if (tStamps.has(interaction.user.id)) {\n              const cdExpirationTime = (tStamps.get(interaction.user.id) || 0) + cdAmount;\n              if (timeNow < cdExpirationTime) {\n                // const timeLeft = (cdExpirationTime - timeNow) / 1000;\n                return client.managers.buttons?.emit(BUTTON_EVENTS.cooldownLimit, interaction, cdExpirationTime - timeNow);\n              }\n            }\n\n            tStamps.set(interaction.user.id, timeNow);\n            setTimeout(() => tStamps.delete(interaction.user.id), cdAmount);\n          }\n        }\n\n        await button.execute(interaction);\n      })();\n    }\n  } catch (err) {\n    const e = err as Error;\n    new ShewenyError(client, e);\n  }\n}\n"]}