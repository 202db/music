{"version":3,"file":"SelectMenusManager.js","sourceRoot":"","sources":["../../src/managers/SelectMenusManager.ts"],"names":[],"mappings":";;;AAAA,kDAA4C;AAC5C,kDAAyD;AACzD,yCAAyC;AACzC,qDAAoD;AACpD,2CAAwC;AAIxC;;GAEG;AACH,MAAa,kBAAmB,SAAQ,sBAAW;IAajD;;;;OAIG;IACH,YAAY,MAAqB,EAAE,OAAkC;QACnE,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAlBzB;;;WAGG;QACH;;;;;WAAkD;QAElD;;;WAGG;QACH;;;;;WAAwD;QAStD,IAAI,CAAC,OAAO,GAAG;YACb,QAAQ,EAAE,OAAO,CAAC,OAAO,EAAE,QAAQ,IAAI,CAAC;SACzC,CAAC;IACJ,CAAC;IAED;;;OAGG;IACI,KAAK,CAAC,OAAO;QAClB,MAAM,MAAM,GAAG,IAAI,kBAAM,CAAmC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE;YACnG,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,qBAAU;YACpB,SAAS,EAAE,IAAI,CAAC,SAAS;SAC1B,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;QACvC,IAAI,6BAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,2BAA2B,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;QACxF,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED;;;OAGG;IACI,SAAS;QACd,IAAI,CAAC,WAAW,GAAG,IAAI,uBAAU,EAAE,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;IAC9C,CAAC;CACF;AAhDD,gDAgDC","sourcesContent":["import { Loader } from '../utils/Loader.js';\nimport { ShewenyInformation } from '../helpers/index.js';\nimport { BaseManager } from './index.js';\nimport { SelectMenu } from '../structures/index.js';\nimport { Collection } from 'discord.js';\nimport type { ShewenyClient } from '../client/Client.js';\nimport type { CustomId, SelectMenusManagerDefaultOptions, SelectMenusManagerOptions } from '../typescript/index.js';\n\n/**\n * Manager for Select Menus\n */\nexport class SelectMenusManager extends BaseManager {\n  /**\n   * Default data for the buttons\n   * @type {SelectMenusManagerDefaultOptions}\n   */\n  public default?: SelectMenusManagerDefaultOptions;\n\n  /**\n   * Collection of the select menus\n   * @type {Collection<CustomId, SelectMenu[]> | undefined}\n   */\n  public selectMenus?: Collection<CustomId, SelectMenu[]>;\n\n  /**\n   * Constructor to manage select menus\n   * @param {ShewenyClient} [client] Client framework\n   * @param {SelectMenusManagerOptions} [options] The options of the manager\n   */\n  constructor(client: ShewenyClient, options: SelectMenusManagerOptions) {\n    super(client, options);\n    this.default = {\n      cooldown: options.default?.cooldown || 0,\n    };\n  }\n\n  /**\n   * Load all select menus in collection\n   * @returns {Promise<Collection<string[], SelectMenu[]> | undefined>}\n   */\n  public async loadAll(): Promise<Collection<CustomId, SelectMenu[]> | undefined> {\n    const loader = new Loader<'customId', CustomId, SelectMenu>(this.client, this.directory, 'customId', {\n      manager: this,\n      instance: SelectMenu,\n      asyncRead: this.asyncRead,\n    });\n    this.selectMenus = await loader.load();\n    new ShewenyInformation(this.client, `- Select-menus loaded : ${this.selectMenus.size}`);\n    return this.selectMenus;\n  }\n\n  /**\n   * Unload all selectMenus\n   * @returns {void}\n   */\n  public unloadAll(): void {\n    this.selectMenus = new Collection();\n    this.client.collections.selectMenus.clear();\n  }\n}\n"]}