{"version":3,"file":"Loader.js","sourceRoot":"","sources":["../../src/utils/Loader.ts"],"names":[],"mappings":"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","sourcesContent":["import { Collection } from 'discord.js';\nimport { ShewenyError, ShewenyWarning } from '../helpers/index.js';\n\nimport type { ShewenyClient } from '../client/Client.js';\n\nimport { readdir, stat } from 'fs/promises';\nimport { resolve } from 'node:path';\nimport type { BaseStructure } from '../structures/index.js';\nimport type { Class, Manager, Structure } from '../typescript/index.js';\n\n// Version 2.0.0\ntype WithMainProperty<K extends string, V> = { [P in K]: V };\ntype StructureConstructed<MKN extends string, MKV, V> = V & WithMainProperty<MKN, MKV>;\ntype StructureConstructable<MKN extends string, MKV, S> = { _id: string } & (new (client: ShewenyClient) => S &\n  WithMainProperty<MKN, MKV>);\ntype StructureType<MKN extends string, MKV> = BaseStructure & WithMainProperty<MKN, MKV>;\n\ninterface LoaderOptions {\n  instance: Class<Structure>;\n  manager: Manager;\n  asyncRead?: boolean;\n}\n\nexport class Loader<MKN extends string, MKV, V extends StructureType<MKN, MKV>> {\n  public readonly client: ShewenyClient;\n  public readonly collection: Collection<MKV, V[]>;\n  public readonly mainKey: MKN;\n  public readonly mainPath: string;\n  public readonly paths: Array<string>;\n  public readonly manager: Manager;\n  public readonly asyncRead: boolean;\n  public readonly instance: Class<Structure>;\n\n  constructor(client: ShewenyClient, path: string, mainKey: MKN, options: LoaderOptions) {\n    this.client = client;\n    this.collection = new Collection<MKV, V[]>();\n    this.mainPath = this.absolutePath(path);\n    this.paths = [];\n    this.mainKey = mainKey;\n    this.manager = options.manager;\n    this.instance = options.instance;\n    this.asyncRead = options.asyncRead ?? false;\n  }\n\n  // Load all structures\n  public async load(dir: string = this.mainPath) {\n    if (dir) await this.readDirectory(this.absolutePath(dir));\n    else if (this.mainPath) await this.readDirectory(this.mainPath);\n    else new ShewenyError(this.client, 'MISSING_PATH_LOADER');\n    if (!this.paths.length) return this.collection;\n\n    if (this.asyncRead) {\n      await Promise.all(this.paths.map(async path => await this.loadFileStructures(path)));\n    } else {\n      for (const path of this.paths) {\n        await this.loadFileStructures(path);\n      }\n    }\n\n    // Return the collection\n    return this.collection;\n  }\n\n  private absolutePath(...dir: string[]) {\n    let main = '';\n    if (require.main) main = require.main.path;\n    else if (!main) main = process.cwd();\n\n    if (dir) main = resolve(main, ...dir);\n    else main = resolve(main);\n    return main;\n  }\n\n  private async readDirectory(dir: string) {\n    const result = await readdir(dir);\n    if (this.asyncRead) {\n      await Promise.all(\n        result.map(async file => {\n          const path = resolve(dir, file);\n          const stats = await stat(path);\n          if (stats.isDirectory()) return this.readDirectory(path);\n          else if ((stats.isFile() && file.endsWith('.js')) || file.endsWith('.ts')) this.paths.push(path);\n        }),\n      );\n    } else {\n      for (const file of result) {\n        const path = resolve(dir, file);\n        const stats = await stat(path);\n        if (stats.isDirectory()) await this.readDirectory(path);\n        else if ((stats.isFile() && file.endsWith('.js')) || file.endsWith('.ts')) this.paths.push(path);\n      }\n    }\n  }\n\n  private async loadFileStructures(path: string) {\n    try {\n      const imported = await import(path);\n      const keys = Object.keys(imported);\n      if (keys.length) {\n        for (const key of keys) {\n          await this.loadStructure(imported[key], path);\n        }\n      } else {\n        await this.loadStructure(imported, path);\n      }\n    } catch (err) {\n      const error = err as Error;\n      new ShewenyError(this.client, 'LOAD_ERROR', path, error.message);\n    }\n  }\n  private async loadStructure(StructureToLoad: StructureConstructable<MKN, MKV, V>, path: string) {\n    try {\n      if (StructureToLoad['_id'] != 'ShewenyLoadable') return;\n      const instance: StructureConstructed<MKN, MKV, V> = new StructureToLoad(this.client);\n      if (!instance) return;\n      // Bad instance\n      if (!(instance instanceof this.instance)) return;\n      if (!Object.hasOwn(instance, this.mainKey)) {\n        return new ShewenyWarning(this.client, 'MISSING_PROPERTY_CLASS', this.mainKey, path);\n      }\n\n      let set = [instance];\n      const get = this.collection.get(instance[this.mainKey]);\n      if (get) {\n        get.push(instance);\n        set = get;\n      }\n\n      // Set data on structure\n      instance.path = path;\n      instance.manager = this.manager;\n      return this.collection.set(instance[this.mainKey], set);\n    } catch (err) {\n      const error = err as Error;\n      return new ShewenyWarning(this.client, 'INVALID_CLASS', StructureToLoad.toString(), path, error);\n    }\n  }\n}\n"]}